# version: '3.4'

# services:
#   taskservice.api:
#     image: ${DOCKER_REGISTRY-}taskserviceapi
#     build:
#       context: .
#       dockerfile: TaskService.API/Dockerfile

version: '3.4'

services:
  taskservice.api:
    build:
      context: .
      dockerfile: TaskService.API/Dockerfile
    ports:
      - "8080:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=taskdb;Username=postgres;Password=postgrespw"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      EF_RUN_MIGRATIONS_ON_STARTUP: "true"

      Logging__LogLevel__Default: Debug
      Logging__LogLevel__Microsoft.AspNetCore: Warning
      Logging__LogLevel__TaskService.API.Controllers: Debug
      Logging__Console__FormatterName: simple
      Logging__Console__FormatterOptions__SingleLine: "false"
      Logging__Console__FormatterOptions__IncludeScopes: "true"
      Logging__Console__FormatterOptions__TimestampFormat: "HH:mm:ss"
      Logging__Console__FormatterOptions__UseUtcTimestamp: "false"

    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_USER: postgres
      POSTGRES_DB: taskdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
